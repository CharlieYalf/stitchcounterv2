@import './styles/variables.css';

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background: var(--background-color);
  color: var(--text-color);
  line-height: 1.6;
  font-weight: var(--font-weight-normal);
}

.app {
  min-height: 100vh;
  background: linear-gradient(135deg, var(--background-color) 0%, var(--surface-color) 100%);
}

/* Global button styles */
button {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  border: none;
  background: none;
  cursor: pointer;
  transition: var(--transition-base);
}

button:focus {
  outline: 3px solid var(--highlight-color);
  outline-offset: 2px;
  box-shadow: 0 0 0 3px rgba(212, 175, 55, 0.2);
}

button:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* Global input styles */
input, textarea, select {
  font-family: inherit;
  font-size: inherit;
  line-height: inherit;
  border: 2px solid var(--accent-color);
  border-radius: var(--radius-md);
  padding: var(--spacing-md);
  background: var(--background-color);
  color: var(--text-color);
  transition: var(--transition-base);
}

input:focus, textarea:focus, select:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(107, 68, 35, 0.15);
}

/* Global link styles */
a {
  color: var(--primary-color);
  text-decoration: none;
  transition: var(--transition-base);
}

a:hover {
  color: var(--secondary-color);
  text-decoration: underline;
}

/* Utility classes */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

.text-center {
  text-align: center;
}

.text-left {
  text-align: left;
}

.text-right {
  text-align: right;
}

.font-bold {
  font-weight: bold;
}

.font-normal {
  font-weight: normal;
}

/* Loading states */
.loading {
  opacity: 0.6;
  pointer-events: none;
}

/* Animation classes */
.fade-in {
  animation: fadeIn var(--transition-base) ease-in-out;
}

.slide-up {
  animation: slideUp var(--transition-base) ease-out;
}

.bounce {
  animation: bounce 0.6s ease-in-out;
}

.pulse {
  animation: pulse 0.8s ease-in-out;
}

.fade-in-up {
  animation: fadeInUp 0.5s ease-out;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideUp {
  from {
    transform: translateY(20px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes bounce {
  0%, 20%, 50%, 80%, 100% {
    transform: translateY(0);
  }
  40% {
    transform: translateY(-8px);
  }
  60% {
    transform: translateY(-4px);
  }
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Mobile-specific styles */
@media (max-width: 768px) {
  body {
    font-size: var(--font-size-base);
  }
  
  /* Prevent zoom on input focus */
  input, textarea, select {
    font-size: 16px;
  }
  
  /* Improve touch targets */
  button, input, textarea, select {
    min-height: var(--touch-target-min);
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  :root {
    --primary-color: #000000;
    --text-color: #000000;
    --background-color: #FFFFFF;
    --surface-color: #F5F5F5;
    --accent-color: #666666;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  * {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* Dark mode support (if needed in future) */
@media (prefers-color-scheme: dark) {
  /* Dark mode styles would go here */
}

/* Print styles */
@media print {
  .app {
    background: white;
    color: black;
  }
  
  button {
    display: none;
  }
  
  .counter-container {
    break-inside: avoid;
  }
}